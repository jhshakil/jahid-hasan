import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { Toaster } from "sonner";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import { NexiosResponse } from "nexios-http/types/interfaces";
import { IResponse, TProfile } from "@/types";
import nexiosInstance from "../../nexios.config";
import { envConfig } from "@/config/envConfig";
import ScrollToTop from "@/components/ScrollToTop";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { data: profileData }: NexiosResponse<IResponse<TProfile[]>> =
    await nexiosInstance.get(`${envConfig.baseUrl}/profile`, {
      cache: "no-store",
    });

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Header resume={profileData?.data?.[0]?.resumeLink as string} />
        <div className="container max-w-screen-xl mx-auto px-4 flex flex-col min-h-screen">
          <main className="flex-grow">{children}</main>
        </div>
        <Footer />
        <ScrollToTop />
        <Toaster />
      </body>
    </html>
  );
}
